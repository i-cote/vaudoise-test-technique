version: "3.9"

services:
  db:
    image: postgres:16-alpine
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 6
      start_period: 5s

  migrator:
    image: postgres:16-alpine
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    environment:
      PGDATABASE: ${POSTGRES_DB}
      PGUSER: ${POSTGRES_USER}
      PGPASSWORD: ${POSTGRES_PASSWORD}
      PGHOST: db
      PGPORT: 5432
    volumes:
      - ./clients-contracts-db/migrations:/migrations:ro
    working_dir: /migrations
    command: ["/usr/local/bin/psql", "-f", "./00-setup.sql"]

  api:
    build:
      context: ./clients-contracts-api
      dockerfile: Dockerfile
    depends_on:
      migrator:
        condition: service_completed_successfully
    ports:
      - "8080:8080"

  unit-tests:
    build:
      context: ./clients-contracts-api
      dockerfile: Dockerfile
    command: ["mvn", "test"]
    profiles:
      - unit-tests

volumes:
  db-data:
